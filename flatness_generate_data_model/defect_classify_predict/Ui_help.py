# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'D:\programdata\pycharm\首钢报告\GUI\wsk_work\板形回归与分类\板形缺陷模式多分类预测模型\help.ui'
#
# Created by: PyQt5 UI code generator 5.15.6
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("SinglePolicyCompare")
        MainWindow.resize(666, 575)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.gridLayout = QtWidgets.QGridLayout(self.centralwidget)
        self.gridLayout.setObjectName("gridLayout")
        self.label = QtWidgets.QLabel(self.centralwidget)
        font = QtGui.QFont()
        font.setFamily("Adobe 黑体 Std R")
        font.setPointSize(15)
        self.label.setFont(font)
        self.label.setObjectName("label")
        self.gridLayout.addWidget(self.label, 0, 0, 1, 1)
        self.tableWidget = QtWidgets.QTableWidget(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.tableWidget.sizePolicy().hasHeightForWidth())
        self.tableWidget.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setStyleStrategy(QtGui.QFont.PreferDefault)
        self.tableWidget.setFont(font)
        self.tableWidget.setMouseTracking(False)
        self.tableWidget.setTabletTracking(False)
        self.tableWidget.setFocusPolicy(QtCore.Qt.StrongFocus)
        self.tableWidget.setContextMenuPolicy(QtCore.Qt.DefaultContextMenu)
        self.tableWidget.setAcceptDrops(False)
        self.tableWidget.setAutoFillBackground(False)
        self.tableWidget.setInputMethodHints(QtCore.Qt.ImhNone)
        self.tableWidget.setDragEnabled(False)
        self.tableWidget.setAlternatingRowColors(True)
        self.tableWidget.setSelectionBehavior(QtWidgets.QAbstractItemView.SelectItems)
        self.tableWidget.setShowGrid(True)
        self.tableWidget.setWordWrap(True)
        self.tableWidget.setObjectName("tableWidget")
        self.tableWidget.setColumnCount(4)
        self.tableWidget.setRowCount(3)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setVerticalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setVerticalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setVerticalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(3, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setItem(0, 0, item)
        item = QtWidgets.QTableWidgetItem()
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.NoBrush)
        item.setBackground(brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        item.setForeground(brush)
        self.tableWidget.setItem(0, 1, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setItem(0, 2, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setItem(0, 3, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setItem(1, 0, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setItem(1, 1, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setItem(1, 2, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setItem(1, 3, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setItem(2, 0, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setItem(2, 1, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setItem(2, 2, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setItem(2, 3, item)
        self.tableWidget.horizontalHeader().setVisible(True)
        self.tableWidget.horizontalHeader().setCascadingSectionResizes(False)
        self.tableWidget.horizontalHeader().setHighlightSections(True)
        self.tableWidget.horizontalHeader().setSortIndicatorShown(False)
        self.tableWidget.horizontalHeader().setStretchLastSection(True)
        self.tableWidget.verticalHeader().setVisible(True)
        self.tableWidget.verticalHeader().setCascadingSectionResizes(False)
        self.tableWidget.verticalHeader().setHighlightSections(True)
        self.tableWidget.verticalHeader().setSortIndicatorShown(False)
        self.tableWidget.verticalHeader().setStretchLastSection(True)
        self.gridLayout.addWidget(self.tableWidget, 1, 0, 1, 1)
        self.label_2 = QtWidgets.QLabel(self.centralwidget)
        font = QtGui.QFont()
        font.setFamily("Adobe 黑体 Std R")
        font.setPointSize(15)
        self.label_2.setFont(font)
        self.label_2.setObjectName("label_2")
        self.gridLayout.addWidget(self.label_2, 2, 0, 1, 1)
        self.textBrowser = QtWidgets.QTextBrowser(self.centralwidget)
        font = QtGui.QFont()
        font.setFamily("Adobe 宋体 Std L")
        font.setPointSize(14)
        self.textBrowser.setFont(font)
        self.textBrowser.setObjectName("textBrowser")
        self.gridLayout.addWidget(self.textBrowser, 3, 0, 1, 1)
        self.label_3 = QtWidgets.QLabel(self.centralwidget)
        font = QtGui.QFont()
        font.setFamily("Adobe 黑体 Std R")
        font.setPointSize(15)
        self.label_3.setFont(font)
        self.label_3.setObjectName("label_3")
        self.gridLayout.addWidget(self.label_3, 4, 0, 1, 1)
        self.textBrowser_2 = QtWidgets.QTextBrowser(self.centralwidget)
        font = QtGui.QFont()
        font.setFamily("Adobe 宋体 Std L")
        font.setPointSize(14)
        self.textBrowser_2.setFont(font)
        self.textBrowser_2.setObjectName("textBrowser_2")
        self.gridLayout.addWidget(self.textBrowser_2, 5, 0, 1, 1)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 666, 23))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("SinglePolicyCompare", "帮助文档"))
        self.label.setText(_translate("SinglePolicyCompare", "模型特点："))
        self.tableWidget.setSortingEnabled(False)
        item = self.tableWidget.verticalHeaderItem(0)
        item.setText(_translate("SinglePolicyCompare", "CatBoost"))
        item = self.tableWidget.verticalHeaderItem(1)
        item.setText(_translate("SinglePolicyCompare", "DT"))
        item = self.tableWidget.verticalHeaderItem(2)
        item.setText(_translate("SinglePolicyCompare", "RF"))
        item = self.tableWidget.horizontalHeaderItem(0)
        item.setText(_translate("SinglePolicyCompare", "训练速度"))
        item = self.tableWidget.horizontalHeaderItem(1)
        item.setText(_translate("SinglePolicyCompare", "预测速度"))
        item = self.tableWidget.horizontalHeaderItem(2)
        item.setText(_translate("SinglePolicyCompare", "模型精度"))
        item = self.tableWidget.horizontalHeaderItem(3)
        item.setText(_translate("SinglePolicyCompare", "开发人员推荐"))
        __sortingEnabled = self.tableWidget.isSortingEnabled()
        self.tableWidget.setSortingEnabled(False)
        item = self.tableWidget.item(0, 0)
        item.setText(_translate("SinglePolicyCompare", "较快"))
        item = self.tableWidget.item(0, 1)
        item.setText(_translate("SinglePolicyCompare", "较快"))
        item = self.tableWidget.item(0, 2)
        item.setText(_translate("SinglePolicyCompare", "高"))
        item = self.tableWidget.item(0, 3)
        item.setText(_translate("SinglePolicyCompare", "推荐"))
        item = self.tableWidget.item(1, 0)
        item.setText(_translate("SinglePolicyCompare", "较快"))
        item = self.tableWidget.item(1, 1)
        item.setText(_translate("SinglePolicyCompare", "快"))
        item = self.tableWidget.item(1, 2)
        item.setText(_translate("SinglePolicyCompare", "低"))
        item = self.tableWidget.item(1, 3)
        item.setText(_translate("SinglePolicyCompare", "不推荐"))
        item = self.tableWidget.item(2, 0)
        item.setText(_translate("SinglePolicyCompare", "慢"))
        item = self.tableWidget.item(2, 1)
        item.setText(_translate("SinglePolicyCompare", "慢"))
        item = self.tableWidget.item(2, 2)
        item.setText(_translate("SinglePolicyCompare", "较高"))
        item = self.tableWidget.item(2, 3)
        item.setText(_translate("SinglePolicyCompare", "不推荐"))
        self.tableWidget.setSortingEnabled(__sortingEnabled)
        self.label_2.setText(_translate("SinglePolicyCompare", "图像横纵坐标说明："))
        self.textBrowser.setHtml(_translate("SinglePolicyCompare", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'Adobe 宋体 Std L\'; font-size:14pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'SimSun\';\">原始带钢PDA数据经数据处理后，在轧制方向每隔一米对带钢宽度采样一次，并计算当前宽度IU值反映的带钢浪形有无缺陷</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'宋体,monospace\'; font-size:13.5pt; font-weight:600; color:#000000;\">无明显浪形：</span><span style=\" font-family:\'JetBrains Mono,monospace\'; font-size:13.5pt; font-weight:600; color:#000000;\">0  </span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'宋体,monospace\'; font-size:13.5pt; font-weight:600; color:#000000;\">右边浪：</span><span style=\" font-family:\'JetBrains Mono,monospace\'; font-size:13.5pt; font-weight:600; color:#000000;\">1  </span><span style=\" font-family:\'宋体,monospace\'; font-size:13.5pt; font-weight:600; color:#000000;\">双边浪:</span><span style=\" font-family:\'JetBrains Mono,monospace\'; font-size:13.5pt; font-weight:600; color:#000000;\">2  </span><span style=\" font-family:\'宋体,monospace\'; font-size:13.5pt; font-weight:600; color:#000000;\">左三分浪:</span><span style=\" font-family:\'JetBrains Mono,monospace\'; font-size:13.5pt; font-weight:600; color:#000000;\">3   </span><span style=\" font-family:\'宋体,monospace\'; font-size:13.5pt; font-weight:600; color:#000000;\">边中浪:</span><span style=\" font-family:\'JetBrains Mono,monospace\'; font-size:13.5pt; font-weight:600; color:#000000;\">4  </span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'宋体,monospace\'; font-size:13.5pt; font-weight:600; color:#000000;\">左边浪:</span><span style=\" font-family:\'JetBrains Mono,monospace\'; font-size:13.5pt; font-weight:600; color:#000000;\">-1  </span><span style=\" font-family:\'宋体,monospace\'; font-size:13.5pt; font-weight:600; color:#000000;\">中浪</span><span style=\" font-family:\'JetBrains Mono,monospace\'; font-size:13.5pt; font-weight:600; color:#000000;\">:-2   </span><span style=\" font-family:\'宋体,monospace\'; font-size:13.5pt; font-weight:600; color:#000000;\">右三分浪:</span><span style=\" font-family:\'JetBrains Mono,monospace\'; font-size:13.5pt; font-weight:600; color:#000000;\">-3  </span><span style=\" font-family:\'宋体,monospace\'; font-size:13.5pt; font-weight:600; color:#000000;\">四分浪:</span><span style=\" font-family:\'JetBrains Mono,monospace\'; font-size:13.5pt; font-weight:600; color:#000000;\">-4</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'SimSun\';\">图像是将模型预测结果与实际结果放在了一个混淆矩阵中，易于判定模型优劣，即矩阵对角线上的值越高，其他位置值越小，模型越优。</span></p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p></body></html>"))
        self.label_3.setText(_translate("SinglePolicyCompare", "阈值说明："))
        self.textBrowser_2.setHtml(_translate("SinglePolicyCompare", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'Adobe 宋体 Std L\'; font-size:14pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">由于不同钢种的轧制条件不同，导致判定有无缺陷的阈值也不相同，初步仿真，暂定IU均值低于3的为无缺陷浪形，高于3的为有缺陷。对于多分类问题，当IU均值高于3时，系统内置一种算法可计算当前浪形缺陷的具体类型。</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">注：</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">阈值大小后期可根据需求更改。</p></body></html>"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
